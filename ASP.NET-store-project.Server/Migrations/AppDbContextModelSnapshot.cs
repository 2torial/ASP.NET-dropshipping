// <auto-generated />
using System;
using ASP.NET_store_project.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ASP.NET_store_project.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.AdressDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderId");

                    b.ToTable("AdressDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ApartmentNumber = "91",
                            City = "Bielsko-Biała",
                            HouseNumber = "17",
                            PostalCode = "43-300",
                            Region = "Śląsk",
                            StreetName = "3 Maja"
                        },
                        new
                        {
                            OrderId = 2,
                            City = "Wrocław",
                            HouseNumber = "15",
                            PostalCode = "50-383",
                            Region = "Dolny Śląsk",
                            StreetName = "Fryderyka Joliot-Curie"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Category", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Type = "Laptops",
                            Label = "Laptops/Notebooks/Ultrabooks"
                        },
                        new
                        {
                            Type = "Headsets",
                            Label = "Headsets"
                        },
                        new
                        {
                            Type = "Microphones",
                            Label = "Microphones"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "RAM Memory",
                            Order = 4,
                            Parameter = "4 GB"
                        },
                        new
                        {
                            Id = 2,
                            Label = "RAM Memory",
                            Order = 8,
                            Parameter = "8 GB"
                        },
                        new
                        {
                            Id = 3,
                            Label = "RAM Memory",
                            Order = 16,
                            Parameter = "16 GB"
                        },
                        new
                        {
                            Id = 4,
                            Label = "RAM Memory",
                            Order = 32,
                            Parameter = "32 GB"
                        },
                        new
                        {
                            Id = 5,
                            Label = "RAM Memory",
                            Order = 64,
                            Parameter = "64 GB"
                        },
                        new
                        {
                            Id = 6,
                            Label = "RAM Memory",
                            Order = 9999,
                            Parameter = "No Memory"
                        },
                        new
                        {
                            Id = 7,
                            Label = "System",
                            Order = 1,
                            Parameter = "Windows 10"
                        },
                        new
                        {
                            Id = 8,
                            Label = "System",
                            Order = 2,
                            Parameter = "Windows 11"
                        },
                        new
                        {
                            Id = 9,
                            Label = "System",
                            Order = 11,
                            Parameter = "MacOS"
                        },
                        new
                        {
                            Id = 10,
                            Label = "System",
                            Order = 9999,
                            Parameter = "No System"
                        },
                        new
                        {
                            Id = 11,
                            Label = "Disk",
                            Order = 1,
                            Parameter = "SSD"
                        },
                        new
                        {
                            Id = 12,
                            Label = "Disk",
                            Order = 2,
                            Parameter = "SSD"
                        },
                        new
                        {
                            Id = 13,
                            Label = "Disk",
                            Order = 9999,
                            Parameter = "No Disk"
                        },
                        new
                        {
                            Id = 14,
                            Label = "Disk Capacity",
                            Order = 512,
                            Parameter = "512 GB"
                        },
                        new
                        {
                            Id = 15,
                            Label = "Disk Capacity",
                            Order = 1024,
                            Parameter = "1024 GB"
                        },
                        new
                        {
                            Id = 16,
                            Label = "Disk Capacity",
                            Order = 2048,
                            Parameter = "2048 GB"
                        },
                        new
                        {
                            Id = 17,
                            Label = "Disk Capacity",
                            Order = 4096,
                            Parameter = "4096 GB"
                        },
                        new
                        {
                            Id = 18,
                            Label = "Processor",
                            Order = 1,
                            Parameter = "Intel Core i3"
                        },
                        new
                        {
                            Id = 19,
                            Label = "Processor",
                            Order = 1,
                            Parameter = "Intel Core i5"
                        },
                        new
                        {
                            Id = 20,
                            Label = "Processor",
                            Order = 1,
                            Parameter = "Intel Core i7"
                        },
                        new
                        {
                            Id = 21,
                            Label = "Processor",
                            Order = 1,
                            Parameter = "Intel Core i9"
                        },
                        new
                        {
                            Id = 22,
                            Label = "Processor",
                            Order = 2,
                            Parameter = "Ryzen 3"
                        },
                        new
                        {
                            Id = 23,
                            Label = "Processor",
                            Order = 2,
                            Parameter = "Ryzen 5"
                        },
                        new
                        {
                            Id = 24,
                            Label = "Processor",
                            Order = 2,
                            Parameter = "Ryzen 7"
                        },
                        new
                        {
                            Id = 25,
                            Label = "Processor",
                            Order = 2,
                            Parameter = "Ryzen 9"
                        },
                        new
                        {
                            Id = 26,
                            Label = "Processor",
                            Order = 9999,
                            Parameter = "No Processor"
                        },
                        new
                        {
                            Id = 27,
                            Label = "Cord Length",
                            Order = 1,
                            Parameter = "1 m"
                        },
                        new
                        {
                            Id = 28,
                            Label = "Cord Length",
                            Order = 2,
                            Parameter = "2 m"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Customer", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserName");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            UserName = "user",
                            IsAdmin = false,
                            PassWord = "user"
                        },
                        new
                        {
                            UserName = "root",
                            IsAdmin = true,
                            PassWord = "root"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.CustomerDetails", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderId");

                    b.ToTable("CustomerDetails");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Email = "bartżur@tlen.o2",
                            Name = "Bartłomiej",
                            PhoneNumber = "29 02 2024 0",
                            Surname = "Żurowski"
                        },
                        new
                        {
                            OrderId = 2,
                            Email = "stan3@rp.on",
                            Name = "Stanisław",
                            PhoneNumber = "03 05 1791 0",
                            Surname = "August"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "https://placehold.co/150x150",
                            ItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "https://placehold.co/150x150",
                            ItemId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "https://placehold.co/150x150",
                            ItemId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "https://placehold.co/150x150",
                            ItemId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "https://placehold.co/150x150",
                            ItemId = 3
                        },
                        new
                        {
                            Id = 6,
                            Content = "https://placehold.co/150x150",
                            ItemId = 4
                        },
                        new
                        {
                            Id = 7,
                            Content = "https://placehold.co/150x150",
                            ItemId = 5
                        },
                        new
                        {
                            Id = 8,
                            Content = "https://placehold.co/150x150",
                            ItemId = 6
                        },
                        new
                        {
                            Id = 9,
                            Content = "https://placehold.co/150x150",
                            ItemId = 7
                        },
                        new
                        {
                            Id = 10,
                            Content = "https://placehold.co/150x150",
                            ItemId = 8
                        },
                        new
                        {
                            Id = 11,
                            Content = "https://placehold.co/150x150",
                            ItemId = 9
                        },
                        new
                        {
                            Id = 12,
                            Content = "https://placehold.co/150x150",
                            ItemId = 9
                        },
                        new
                        {
                            Id = 13,
                            Content = "https://placehold.co/150x150",
                            ItemId = 10
                        },
                        new
                        {
                            Id = 14,
                            Content = "https://placehold.co/150x150",
                            ItemId = 11
                        },
                        new
                        {
                            Id = 15,
                            Content = "https://placehold.co/150x150",
                            ItemId = 12
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Page")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Item", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "Laptops",
                            Name = "Laptop #1",
                            Price = 900
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "Laptops",
                            Name = "Laptop #2",
                            Price = 650
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = "Laptops",
                            Name = "Laptop #3",
                            Price = 800
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = "Laptops",
                            Name = "Laptop #4",
                            Price = 500
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = "Laptops",
                            Name = "Laptop #5",
                            Price = 660
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = "Laptops",
                            Name = "Laptop #6",
                            Price = 500
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = "Laptops",
                            Name = "Laptop #7",
                            Price = 450
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = "Headsets",
                            Name = "Headset #1",
                            Price = 100
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = "Headsets",
                            Name = "Headset #2",
                            Price = 300
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = "Headsets",
                            Name = "Headset #3",
                            Price = 50
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = "Microphones",
                            Name = "Microphone #1",
                            Price = 50
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = "Microphones",
                            Name = "Microphone #2",
                            Price = 20
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.ItemConfiguration", b =>
                {
                    b.Property<int>("ConfigurationId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("ConfigurationId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemConfiguration");

                    b.HasData(
                        new
                        {
                            ConfigurationId = 5,
                            ItemId = 1
                        },
                        new
                        {
                            ConfigurationId = 8,
                            ItemId = 1
                        },
                        new
                        {
                            ConfigurationId = 10,
                            ItemId = 1
                        },
                        new
                        {
                            ConfigurationId = 16,
                            ItemId = 1
                        },
                        new
                        {
                            ConfigurationId = 19,
                            ItemId = 1
                        },
                        new
                        {
                            ConfigurationId = 3,
                            ItemId = 2
                        },
                        new
                        {
                            ConfigurationId = 7,
                            ItemId = 2
                        },
                        new
                        {
                            ConfigurationId = 11,
                            ItemId = 2
                        },
                        new
                        {
                            ConfigurationId = 14,
                            ItemId = 2
                        },
                        new
                        {
                            ConfigurationId = 21,
                            ItemId = 2
                        },
                        new
                        {
                            ConfigurationId = 1,
                            ItemId = 3
                        },
                        new
                        {
                            ConfigurationId = 6,
                            ItemId = 3
                        },
                        new
                        {
                            ConfigurationId = 3,
                            ItemId = 4
                        },
                        new
                        {
                            ConfigurationId = 8,
                            ItemId = 4
                        },
                        new
                        {
                            ConfigurationId = 5,
                            ItemId = 5
                        },
                        new
                        {
                            ConfigurationId = 9,
                            ItemId = 5
                        },
                        new
                        {
                            ConfigurationId = 10,
                            ItemId = 6
                        },
                        new
                        {
                            ConfigurationId = 15,
                            ItemId = 6
                        },
                        new
                        {
                            ConfigurationId = 11,
                            ItemId = 7
                        },
                        new
                        {
                            ConfigurationId = 15,
                            ItemId = 7
                        },
                        new
                        {
                            ConfigurationId = 22,
                            ItemId = 7
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = "user"
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = "root"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.OrderStatus", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfChange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("OrderId", "StatusCode");

                    b.HasIndex("StatusCode");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.SelectedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("SelectedItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = "user",
                            ItemId = 1,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = "user",
                            ItemId = 8,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = "user",
                            ItemId = 12,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = "root",
                            ItemId = 4,
                            OrderId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = "root",
                            ItemId = 1,
                            OrderId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Status", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Code = "Pending"
                        },
                        new
                        {
                            Code = "Preparing"
                        },
                        new
                        {
                            Code = "Awaiting Delivery"
                        },
                        new
                        {
                            Code = "Sent"
                        },
                        new
                        {
                            Code = "Delivered"
                        },
                        new
                        {
                            Code = "Returned"
                        },
                        new
                        {
                            Code = "Canceled"
                        });
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Image", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Item", null)
                        .WithMany("Gallery")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Item", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.ItemConfiguration", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Configuration", null)
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Order", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.AdressDetails", "AdressDetails")
                        .WithOne()
                        .HasForeignKey("ASP.NET_store_project.Server.Data.Order", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.CustomerDetails", "CustomerDetails")
                        .WithOne()
                        .HasForeignKey("ASP.NET_store_project.Server.Data.Order", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdressDetails");

                    b.Navigation("Customer");

                    b.Navigation("CustomerDetails");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.OrderStatus", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Order", null)
                        .WithMany("StatusChangeHistory")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.Status", null)
                        .WithMany()
                        .HasForeignKey("StatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.SelectedItem", b =>
                {
                    b.HasOne("ASP.NET_store_project.Server.Data.Customer", "Customer")
                        .WithMany("Basket")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP.NET_store_project.Server.Data.Order", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("Customer");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Customer", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Item", b =>
                {
                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("ASP.NET_store_project.Server.Data.Order", b =>
                {
                    b.Navigation("OrderedItems");

                    b.Navigation("StatusChangeHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
